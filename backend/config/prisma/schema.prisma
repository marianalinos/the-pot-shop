// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Product {
  id           Int           @id @unique @default(autoincrement())
  name         String
  price        Decimal       @db.Decimal(10, 2)
  image        String
  cartProducts CartProduct[]
}

model Coupon {
  id         Int      @id @unique @default(autoincrement())
  code       String   @unique
  discount   Decimal  @db.Decimal(10, 2)
  expiration DateTime?
  used       Boolean  @default(false)
  carts      Cart[] // relação inversa
}

model Customer {
  id       Int     @id @unique @default(autoincrement())
  name     String
  email    String  @unique
  password String
  wallet   Decimal @db.Decimal(10, 2)
  orders   Order[]
}

model Cart {
  id       Int           @id @unique @default(autoincrement())
  total    Decimal       @db.Decimal(10, 2)
  products CartProduct[]
  coupon   Coupon?       @relation(fields: [couponId], references: [id], onDelete: SetNull)
  couponId Int?
  order    Order?
}

model CartProduct {
  id        Int     @id @unique @default(autoincrement())
  cart      Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId    Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
}

model Order {
  id         Int       @id @unique @default(autoincrement())
  createdAt  DateTime  @default(now())
  status     Boolean
  customer   Customer? @relation(fields: [customerId], references: [id], onDelete: SetNull)
  customerId Int?
  cart       Cart?     @relation(fields: [cartId], references: [id], onDelete: SetNull)
  cartId     Int?      @unique
}
